syntax = "proto2";

package cliser;

enum CellType {
  GROUND = 1;
  SKY = 2;
  BUILDING = 3;
  RESOURCE = 4; 
}

// you can tell it's protobuf cos it's disgusting snake-case
message Cell {
  required CellType cell_type = 1;
}

// game objects required by actions
message Level {
  required string name = 1;
  required uint32 cell_width = 2;
  required uint32 cell_height = 3;
  repeated Cell cells = 4;
}

// the actions the clients will send to the server
message StartGame {
  required string player_name = 1;
}

message GetLevels {
  required string client_version = 1;
}

message EndGame {

}

// the union type for all client => server actions
message Action {
  oneof messages {
    StartGame start_game = 2;
    GetLevels get_levels = 3;
    EndGame end_game = 4;
  }
}

// the reply messages for the client => server actions
message StartGameReply {
  required string player_name = 1;
}

message GetLevelsReply {
  repeated Level levels = 1;
}

message EndGameReply {

}

// the union type for the client => server actions
message ActionReply {
  oneof messages {
    StartGameReply start_game_reply = 1;
    GetLevelsReply get_levels_reply = 2;
    EndGameReply end_game_reply = 3;
  }
}

// the top level message that client sends to server, 
// all messages from client to server will be encapsulated here
message ServerMessage {
  oneof ffs {
    Action action = 1;
    ActionReply reply = 2;
  }
}

// the main game service is kept simple
service GameService {
  rpc DoAction(Action) returns (ActionReply) { }
}
